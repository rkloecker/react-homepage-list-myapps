{"version":3,"sources":["components/AppItem.js","components/AppList.js","components/Jumbo.js","components/Main.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["AppItem","_ref","_ref$item","item","title","description_long","description_short","url","repo_url","react_default","a","createElement","className","href","AppList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Apps","getApps","console","log","process","_this2","axios","get","concat","then","response","setState","data","catch","err","AppItems","map","App","i","key","_id","Component","Jumbo","Main","AppList_AppList","Navbar","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.514b3d97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({\r\n  item: { title, description_long, description_short, url, repo_url }\r\n}) => {\r\n  return (\r\n    <div className=\"col-lg-4 mt-2\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\"> {title}</h5>\r\n          <p className=\"card-text\">{description_long}</p>\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">{description_short}</li>\r\n          <li className=\"list-group-item\">\r\n            <a href={url}>{url}</a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"card-body\">\r\n          <a href={repo_url}>{repo_url}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AppItem from \"./AppItem\";\r\n\r\nexport default class AppList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      url: \"https://quiet-beyond-62095.herokuapp.com/\",\r\n      Apps: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApps();\r\n    console.log(process.env);\r\n  }\r\n\r\n  getApps() {\r\n    axios\r\n      .get(`${this.state.url}api/apps`)\r\n      .then(response => {\r\n        this.setState({ Apps: response.data }, () => {\r\n          console.log(this.state);\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const AppItems = this.state.Apps.map((App, i) => {\r\n      return <AppItem key={App._id} item={App} />;\r\n    });\r\n    return <div className=\"row\">{AppItems}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"jumbotron bg-primary\">\r\n      <div className=\"container text-white\">\r\n        <h1>This is an overview of my Javascript Web apps</h1>\r\n        <p className=\"lead\">\r\n          Created with Vanilla JS, Angular, Vue, React, Express JS\r\n        </p>\r\n        <p className=\"lead\">Deployed on heroku, surge, github pages</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport AppList from \"./AppList\";\r\nimport Jumbo from \"./Jumbo\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <Jumbo />\r\n      <AppList />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\r\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\">\r\n        ACME Robo K Cosmo Unlimited, Demo Fake Company\r\n      </h5>\r\n      <nav className=\"my-2 my-md-0 mr-md-3\">\r\n        <a\r\n          className=\"p-2 text-dark\"\r\n          href=\"https://rkloecker.github.io/newtest/homepage.html\"\r\n        >\r\n          Home\r\n        </a>\r\n        <a className=\"p-2 text-dark\" href=\"#\">\r\n          Details\r\n        </a>\r\n        <a className=\"p-2 text-dark\" href=\"#\">\r\n          List\r\n        </a>\r\n        <a className=\"p-2 text-dark\" href=\"#\">\r\n          My Github repos\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"mt-3\">\r\n      <p>&copy; 2018 ACME Robo K Cosmo Unlimited, Demo Fake Company</p>\r\n    </footer>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}